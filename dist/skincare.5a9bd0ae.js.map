{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,sBCAAC,EAAAD,EAAA,uCDMA,MAAME,EAAiBC,SAASC,eAAe,YACzCC,EAAiBF,SAASC,eAAe,YACzCE,EAAcH,SAASC,eAAe,SAE5C,IAAIG,EACAC,EAAW,GACXC,EAAO,GAEXC,eAAeC,IACX,MAAMC,QCbVF,eAA2BG,GACvB,MAAMC,EAAgBb,EAAAc,WAAWF,EAAI,YACrC,IACI,MALRG,KAKgBA,SAAgBf,EAAAgB,QAAQH,GAOhC,OANiBE,EAAKE,KAAKC,IAChB,IACAA,EAAIC,OACPC,GAAIF,EAAIE,OAIlB,MAAMC,GACJC,QAAQC,IAAIF,IDCeG,CAAY1B,EAAAc,IAC3CX,EAAewB,UAAY,GAC3Bd,EAAiBe,SAAQC,IACrBC,EAAcD,MAGlBpB,EAAWI,EAIf,SAASiB,EAAcC,GACnB,MAAMF,EAAUzB,SAAS4B,cAAc,KACvCH,EAAQI,UAAY,UAEpBJ,EAAQK,aAAa,OAAQ,qBAAqBH,EAAKT,MAEvD,MAAMa,EAAaJ,EAAKK,OAASL,EAAKK,OAAO,GAAK,8EAI5CC,EAFuB3B,EAAK4B,MAAMC,GAAgBA,EAAYjB,KAAOS,EAAKT,KAGhF,gEACA,qDAEAO,EAAQF,UAAY,mBACRQ,4GAEuBJ,EAAKS,oDACRT,EAAKU,iDACJC,EAAAC,eAAeZ,EAAKa,wBAC/CP,sBAINlC,EAAe0C,YAAYhB,GAE3B,MAAMiB,EAAiBjB,EAAQkB,cAAc,kBAE7CD,EAAeE,iBAAiB,SAASrC,MAAOY,IAC5CA,EAAE0B,iBAEFvC,EAAKwC,KAAKnB,GACVW,EAAAS,iBAAiBzC,GAEbF,SACM4C,EAAAC,mBAAmBrD,EAAAc,GAAIN,EAAW8C,IAAK5C,GAGjDoC,EAAeZ,aAAa,YAAY,GACxCY,EAAeS,UAAY,mBA4BnC,SAASC,IACL,MAAMC,EAAcnD,EAAeoD,MAC7BC,EAAWpD,EAAYmD,MAE7B,IAAIE,EAAmB,GAGnBA,EADgB,KAAhBH,EACmBhD,EAASoD,QAAQhC,GAAYA,EAAQW,WAAaiB,IAElDhD,EAGN,QAAbkD,IACAC,EAAmBA,EAAiBE,MAAK,CAACC,EAAGC,IAAMA,EAAEpB,MAAQmB,EAAEnB,SAGlD,SAAbe,IACAC,EAAmBA,EAAiBE,MAAK,CAACC,EAAGC,IAAMD,EAAEnB,MAAQoB,EAAEpB,SAGlD,SAAbe,IACAC,EAAmBA,EAAiBE,MAAK,CAACC,EAAGC,IAAMD,EAAEtB,KAAKwB,cAAcD,EAAEvB,SAG7D,SAAbkB,IACAC,EAAmBA,EAAiBE,MAAK,CAACC,EAAGC,IAAMA,EAAEvB,KAAKwB,cAAcF,EAAEtB,SAG9EtC,EAAewB,UAAY,GAC3BiC,EAAiBhC,SAAQC,IACrBC,EAAcD,MAKtBvB,EAAe0C,iBAAiB,UAAUzB,IACtCiC,OAGJjD,EAAYyC,iBAAiB,UAAUzB,IACnCiC,OAGJU,EAAAC,mBAAmBnE,EAAAoE,MAAMzD,MAAO0D,IAC5B7C,QAAQC,IAAI4C,GACRA,GAGF7D,EAAa6D,EACb3D,QAAa0C,EAAAkB,gBAAgBtE,EAAAc,GAAIN,EAAW8C,MAG1C5C,EA1DR,WACI,MAAM6D,EAASC,aAAaC,QAAQ,QACpC,OAAOF,EAASG,KAAKC,MAAMJ,GAAU,GAwD1BK,GAKXhE","sources":["src/skincare.js","src/functions/products.js"],"sourcesContent":["import { db, auth } from \"./app\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { getProducts } from \"./functions/products\";\nimport { createFirebaseCart, getFirebaseCart  } from \"./functions/cart\";\nimport { addProductToCart, currencyFormat } from \"./utils\";\n\nconst productSection = document.getElementById(\"products\");\nconst categoryFilter = document.getElementById(\"category\");\nconst orderFilter = document.getElementById(\"order\");\n\nlet userLogged = undefined;\nlet products = [];\nlet cart = [];\n\nasync function loadProducts() {\n    const firebaseProducts = await getProducts(db);\n    productSection.innerHTML = \"\";\n    firebaseProducts.forEach(product => {\n        renderProduct(product);\n    });\n\n    products = firebaseProducts;\n}\n\n//shows the product and all the info\nfunction renderProduct(item) {\n    const product = document.createElement(\"a\");\n    product.className = \"product\";\n\n    product.setAttribute(\"href\", `./product.html?id=${item.id}`);\n\n    const coverImage = item.images ? item.images[0] : \"https://cdn1.iconfinder.com/data/icons/business-company-1/500/image-512.png\";\n\n    const isProductAddedToCart = cart.some((productCart) => productCart.id === item.id);\n\n    const productButtonCart = isProductAddedToCart ?\n    '<button class=\"product__cart\" disabled>Product added</button>' :\n    '<button class=\"product__cart\">Add to Cart</button>';\n\n    product.innerHTML = `\n    <img src=\"${coverImage}\" alt=\"\" class=\"product__image\">\n    <div class=\"product__info\">\n        <p class=\"product__category\">${item.category}</p> \n        <h2 class=\"product__name\">${item.name}</h2>\n        <h3 class=\"product__price\">${currencyFormat(item.price)}</h3>\n        ${productButtonCart}\n    </div>\n    `;\n\n    productSection.appendChild(product);\n\n    const productCartBtn = product.querySelector(\".product__cart\");\n\n    productCartBtn.addEventListener(\"click\", async (e) => {\n        e.preventDefault(); // evitar que al dar click en el boton, funcione el enlace del padre.\n\n        cart.push(item);\n        addProductToCart(cart);\n\n        if (userLogged) {\n            await createFirebaseCart(db, userLogged.uid, cart);\n        }\n\n        productCartBtn.setAttribute(\"disabled\", true);\n        productCartBtn.innerText = \"Product added\";\n\n    });\n}\n\nasync function removeProduct(productId) {\n    const newCart = cart.filter(product => product.id !== productId);\n    \n    cart = newCart;\n\n    if (userLogged) {\n        await createFirebaseCart(db, userLogged.uid, newCart);\n    }\n\n    addProductToCart(newCart);\n\n    cartSection.innerHTML = \"\";\n\n    loadCart(newCart);\n\n}\n\nfunction getMyCart() {\n    const myCart = localStorage.getItem(\"cart\");\n    return myCart ? JSON.parse(myCart) : [];\n}\n\n//filters\nfunction filterBy(){\n    const newCategory = categoryFilter.value;\n    const newOrder = orderFilter.value;\n\n    let filteredProducts = [];\n\n    if (newCategory !== \"\") {\n        filteredProducts = products.filter((product) => product.category === newCategory);\n    } else {\n        filteredProducts = products;\n    }\n\n    if (newOrder === \"asc\") {\n        filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\n    }\n\n    if (newOrder === \"desc\") {\n        filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\n    }\n\n    if (newOrder === \"AtoZ\") {\n        filteredProducts = filteredProducts.sort((a, b) => a.name.localeCompare(b.name));\n    }\n\n    if (newOrder === \"ZtoA\") {\n        filteredProducts = filteredProducts.sort((a, b) => b.name.localeCompare(a.name));\n    }\n    \n    productSection.innerHTML = \"\";\n    filteredProducts.forEach(product => {\n        renderProduct(product);\n    });\n\n}\n\ncategoryFilter.addEventListener(\"change\", e => {\n    filterBy();\n});\n\norderFilter.addEventListener(\"change\", e => {\n    filterBy();\n});\n\nonAuthStateChanged(auth, async (user) => {\n    console.log(user);\n    if (user) {\n      // User is signed in, see docs for a list of available properties\n      // https://firebase.google.com/docs/reference/js/firebase.User\n      userLogged = user;\n      cart = await getFirebaseCart(db, userLogged.uid);\n      // ...\n    } else {\n        cart = getMyCart();\n      // User is signed out\n      // ...\n    }\n\n    loadProducts();\n\n  });\n","import { collection, getDocs } from \"firebase/firestore\";\n\nasync function getProducts(db) {\n    const collectionRef = collection(db, \"products\");\n    try {\n        const { docs } =  await getDocs(collectionRef);\n        const products = docs.map((doc) => {\n            return {\n                ...doc.data(),\n                id: doc.id,\n            };\n        });\n        return products;\n    } catch(e) {\n        console.log(e);\n    }\n}\n\nexport {\n    getProducts,\n}"],"names":["$jQQXv","parcelRequire","$etBjH","$146c23db9edfa7d8$var$productSection","document","getElementById","$146c23db9edfa7d8$var$categoryFilter","$146c23db9edfa7d8$var$orderFilter","$146c23db9edfa7d8$var$userLogged","$146c23db9edfa7d8$var$products","$146c23db9edfa7d8$var$cart","async","$146c23db9edfa7d8$var$loadProducts","firebaseProducts","db","collectionRef","collection","docs","getDocs","map","doc","data","id","e","console","log","$0218f50cb6a65388$export$68a801b7b3c0bfaa","innerHTML","forEach","product","$146c23db9edfa7d8$var$renderProduct","item","createElement","className","setAttribute","coverImage","images","productButtonCart","some","productCart","category","name","$2EF88","currencyFormat","price","appendChild","productCartBtn","querySelector","addEventListener","preventDefault","push","addProductToCart","$6naOk","createFirebaseCart","uid","innerText","$146c23db9edfa7d8$var$filterBy","newCategory","value","newOrder","filteredProducts","filter","sort","a","b","localeCompare","$1tHc5","onAuthStateChanged","auth","user","getFirebaseCart","myCart","localStorage","getItem","JSON","parse","$146c23db9edfa7d8$var$getMyCart"],"version":3,"file":"skincare.5a9bd0ae.js.map"}